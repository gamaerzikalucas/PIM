import os
import re

# Arquivos
USUARIOS = "usuarios.txt"
RESPOSTAS = "respostas_quiz.txt"

# Valida√ß√£o de senha forte
def validar_senha(senha):
    return (
        len(senha) >= 8 and
        re.search(r"[A-Z]", senha) and
        re.search(r"[a-z]", senha) and
        re.search(r"[0-9]", senha) and
        re.search(r"[\W_]", senha)
    )

# Cria√ß√£o de senha
def criar_senha():
    print("\n=== CRIAR SENHA SEGURA ===")
    nome = input("Digite seu nome: ")
    while True:
        senha = input("Crie uma senha (m√≠n. 8 caracteres, com mai√∫scula, min√∫scula, n√∫mero e s√≠mbolo): ")
        if validar_senha(senha):
            with open(USUARIOS, "a") as f:
                f.write(f"{nome},{senha}\n")
            print("Senha criada com sucesso!\n")
            break
        else:
            print("Senha fraca! Tente novamente.")

# Simulador de login
def simulador_login():
    print("\n=== SIMULADOR DE LOGIN ===")
    nome = input("Digite seu nome: ")
    senha = input("Digite sua senha: ")
    with open(USUARIOS, "r") as f:
        for linha in f:
            usuario, senha_armazenada = linha.strip().split(",")
            if nome == usuario and senha == senha_armazenada:
                print("Login bem-sucedido!\n")
                return True
    print("Seu cadastro est√° inv√°lido! (tente colocar seu nome de forma leg√≠vel, e crie uma senha mais forte).\n")
    return False

# Quiz final
def quiz():
    print("\n=== QUIZ FINAL ===")
    nome = input("Digite seu nome para iniciar o quiz: ").strip()

    perguntas = [
        {
            "numero": 1,
            "texto": "O que √© um site falso (phishing)?\n"
                     "a) Um site de jogos\n"
                     "b) Um site que imita outro para roubar dados\n"
                     "c) Um blog de receitas\n> ",
            "correta": "b",
            "explicacao": "Phishing √© um golpe que utiliza sites falsos para enganar as pessoas e roubar dados como senhas e informa√ß√µes banc√°rias."
        },
        {
            "numero": 2,
            "texto": "Qual dessas senhas √© mais segura?\n"
                     "a) Abc@1234\n"
                     "b) 123456\n"
                     "c) senha123\n> ",
            "correta": "a",
            "explicacao": "Senhas seguras misturam letras mai√∫sculas e min√∫sculas, n√∫meros e s√≠mbolos. 'Abc@1234' √© a √∫nica que atende a esses crit√©rios."
        },
        {
            "numero": 3,
            "texto": "O que voc√™ deve fazer ao receber um link suspeito?\n"
                     "a) Clicar sem pensar\n"
                     "b) Compartilhar com amigos\n"
                     "c) Verificar antes de clicar\n> ",
            "correta": "c",
            "explicacao": "Nunca clique diretamente em links suspeitos. Verifique a fonte antes para evitar golpes ou infec√ß√µes por v√≠rus."
        },
        {
            "numero": 4,
            "texto": "O que √© um algoritmo?\n"
                     "a) Um tipo de v√≠rus de computador\n"
                     "b) Um conjunto de passos para resolver um problema\n"
                     "c) Um programa de TV\n> ",
            "correta": "b",
            "explicacao": "Algoritmo √© uma sequ√™ncia l√≥gica de instru√ß√µes usada para resolver problemas ou realizar tarefas espec√≠ficas."
        },
        {
            "numero": 5,
            "texto": "Qual √© o principal direito garantido pela LGPD?\n"
                     "a) O direito de vender dados\n"
                     "b) O direito de ser pago pela internet\n"
                     "c) O direito √† privacidade e controle dos dados pessoais\n> ",
            "correta": "c",
            "explicacao": "A LGPD garante ao cidad√£o o controle sobre seus dados pessoais, promovendo o direito √† privacidade e seguran√ßa das informa√ß√µes."
        },
        {
            "numero": 6,
            "texto": "Qual atitude √© considerada √©tica no uso da internet?\n"
                     "a) Espalhar informa√ß√µes falsas\n"
                     "b) Compartilhar dados sem permiss√£o\n"
                     "c) Respeitar a privacidade e a opini√£o dos outros\n> ",
            "correta": "c",
            "explicacao": "A √©tica digital envolve o respeito √† privacidade, √† opini√£o dos outros e o combate √† desinforma√ß√£o."
        },
        {
            "numero": 7,
            "texto": "O que significa pensar logicamente em programa√ß√£o?\n"
                     "a) Acreditar que tudo √© poss√≠vel\n"
                     "b) Seguir passos claros para chegar a um resultado\n"
                     "c) Ignorar erros e continuar\n> ",
            "correta": "b",
            "explicacao": "Pensar logicamente √© seguir uma sequ√™ncia de passos organizados e coerentes para resolver problemas ou criar programas."
        },
        {
            "numero": 8,
            "texto": "Qual dessas a√ß√µes desrespeita os direitos humanos na internet?\n"
                     "a) Ajudar algu√©m com dificuldade\n"
                     "b) Discriminar pessoas online\n"
                     "c) Criar conte√∫dos educativos\n> ",
            "correta": "b",
            "explicacao": "Discriminar pessoas online √© uma viola√ß√£o dos direitos humanos. Respeito e empatia s√£o fundamentais tamb√©m no ambiente digital."
        }
    ]

    pontuacao = 0
    respostas_usuario = []

    with open(RESPOSTAS, "a") as resp_file:
        for pergunta in perguntas:
            while True:
                resposta = input(pergunta["texto"]).strip().lower()
                if resposta in ['a', 'b', 'c']:
                    break
                else:
                    print("Resposta inv√°lida. Escolha a, b ou c.")
            respostas_usuario.append((pergunta, resposta))
            resp_file.write(f"{nome}, Pergunta {pergunta['numero']}: {resposta}\n")

    print("\n=== RESULTADO DO QUIZ ===")

    for pergunta, resposta in respostas_usuario:
        if resposta == pergunta["correta"]:
            pontuacao += 1
        else:
            print(f"\n‚ùå Pergunta {pergunta['numero']} incorreta:")
            print(pergunta["texto"].split("\n")[0])  # Apenas o enunciado
            print(f"‚úî Resposta correta: {pergunta['correta']}")
            print(f"‚Ñπ Explica√ß√£o: {pergunta['explicacao']}")

    print(f"\n‚úÖ Voc√™ acertou {pontuacao}/8.")

    if pontuacao >= 6:
        print(f"Parab√©ns, {nome}! Voc√™ teve um bom desempenho.")
    else:
        print(f"{nome}, tente novamente para melhorar sua pontua√ß√£o.")

# M√≥dulo de aprendizado extra sobre seguran√ßa digital
def aprender_mais():
    print("\n=== APRENDIZADO EXTRA: SEGURAN√áA DIGITAL ===")

    perguntas_extras = [
        {
            "pergunta": "Por que √© importante usar uma conex√£o segura (HTTPS)?",
            "resposta": "O HTTPS garante que a conex√£o entre seu navegador e o site seja criptografada, protegendo seus dados contra intercepta√ß√µes.",
        },
        {
            "pergunta": "O que √© um golpe de engenharia social?",
            "resposta": "√â quando um golpista manipula algu√©m para obter informa√ß√µes confidenciais, como senhas ou n√∫meros de cart√£o, se passando por uma pessoa confi√°vel.",
        }
    ]

    for p in perguntas_extras:
        input(f"\nüëâ {p['pergunta']}\n(Aperte Enter para ver a explica√ß√£o)")
        print(f"üí° {p['resposta']}")

    print("\n‚úÖ Obrigado por aprender mais sobre seguran√ßa digital!\n")

# Menu principal
def menu():
    while True:
        print("\n=== SISTEMA DE NAVEGA√á√ÉO SEGURA ===")
        print("1 - Criar senha segura")
        print("2 - Simular login")
        print("3 - Fazer quiz final")
        print("4 - Aprender mais sobre seguran√ßa digital")
        print("5 - Sair")
        escolha = input("Escolha uma op√ß√£o: ")

        if escolha == "1":
            criar_senha()
        elif escolha == "2":
            simulador_login()
        elif escolha == "3":
            quiz()
        elif escolha == "4":
            aprender_mais()
        elif escolha == "5":
            print("Encerrando o sistema.")
            break
        else:
            print("Op√ß√£o inv√°lida. Tente novamente.")

# Executar
if __name__ == "__main__":
    for arquivo in [USUARIOS, RESPOSTAS,]:
        if not os.path.exists(arquivo):
            with open(arquivo, "w"): pass
    menu()
